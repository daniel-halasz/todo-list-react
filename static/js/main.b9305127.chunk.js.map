{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","Tasks","props","tasks","map","task","done","hideDoneTask","content","Buttons","hideDoneTasks","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySASeA,EAPF,kBACT,uBAAMC,UAAU,OAAhB,UACI,uBAAOA,UAAU,cAAcC,YAAY,0BAC3C,wBAAQD,UAAU,eAAlB,+BCaOE,G,MAhBD,SAACC,GAAD,OACV,oBAAIH,UAAU,gBAAd,SACKG,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OACjB,qBAAIN,UAAS,4BAAwBM,EAAKC,MAAQJ,EAAMK,aAAgB,4BAA8B,IAAtG,UACI,wBAAQR,UAAU,gDAAlB,SACKM,EAAKC,KAAO,SAAM,KAEvB,sBAAMP,UAAS,4BAAuBM,EAAKC,KAAO,2BAA6B,IAA/E,SACHD,EAAKG,UAEN,wBAAQT,UAAU,kDAAlB,oCCSGU,G,MAnBC,SAAC,GAA8B,IAA5BN,EAA2B,EAA3BA,MAAOO,EAAoB,EAApBA,cACtB,OAAqB,IAAjBP,EAAMQ,OACC,KAIP,sBAAKZ,UAAU,UAAf,UACI,wBAAQA,UAAU,kBAAlB,SACKW,EAAgB,4BAAoB,yBAEzC,wBAAQX,UAAU,kBACda,SAAUT,EAAMU,OAAM,qBAAGP,QAD7B,wCCAGQ,G,MAVC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAMC,EAAf,EAAeA,mBAAf,OACZ,0BAASlB,UAAU,UAAnB,UACI,yBAAQA,UAAU,kBAAlB,UACE,oBAAIA,UAAU,uBAAd,SAAsCgB,IACrCE,KAEAD,OCFIE,EANA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OACb,iCACE,6BAAKA,OCMMI,G,MANG,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACd,sBAAMrB,UAAU,YAAhB,SACKqB,MCGHjB,EAAQ,CACZ,CAAEkB,GAAI,EAAGb,QAAS,6BAAoBF,MAAM,GAC5C,CAAEe,GAAI,EAAGb,QAAS,oBAAgBF,MAAM,IAsB3BgB,MAjBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQP,MAAM,qBACd,cAAC,EAAD,CACEA,MAAM,qBACNC,KAAM,cAAC,EAAD,MAER,cAAC,EAAD,CACED,MAAM,mBACNC,KAAM,cAAC,EAAD,CAAOb,MAAOA,EAAOO,cAZb,QAadO,mBAAoB,cAAC,EAAD,CAASd,MAAOA,EAAOO,cAb7B,cCAPa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9305127.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = () => (\r\n    <form className=\"form\">\r\n        <input className=\"form__input\" placeholder=\"Co jest do zrobienia?\" />\r\n        <button className=\"form__button\">Dodaj zadanie</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;","import \"./style.css\"\r\n\r\nconst Tasks = (props) => (\r\n    <ul className=\"section__list\">\r\n        {props.tasks.map(task => (\r\n            <li className={`section__listItem ${(task.done && props.hideDoneTask) ? \"section__listTask--hidden\" : \"\"}`}>\r\n                <button className=\"section__listButton section__listButton--done\">\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </button>\r\n                <span className={`section__listTask ${task.done ? \" section__listTask--done\" : \"\"}`}>\r\n            {task.content}\r\n            </span>\r\n            <button className=\"section__listButton section__listButton--remove\">ðŸ—‘</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDoneTasks }) => {\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"buttons\">\r\n            <button className=\"buttons__button\">\r\n                {hideDoneTasks ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\r\n            </button>\r\n            <button className=\"buttons__button\"\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                UkoÅ„cz wszystkie\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n          <h2 className=\"section__headerTitle\">{title}</h2>\r\n          {extraHeaderContent}\r\n        </header>\r\n          {body}\r\n      </section>\r\n)\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({children}) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  { id: 1, content: \"przejÅ›Ä‡ na React\", done: false },\n  { id: 2, content: \"zrobiÄ‡ obiad\", done: true }\n];\n\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form />}\n      />\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={<Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n        extraHeaderContent={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}